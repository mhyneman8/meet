{"version":3,"sources":["mock-data.js","api.js","Event.js","EventList.js","Alert.js","CitySearch.js","NumberOfEvents.js","img/Spinner.svg","Loader.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["mockData","JSON","parse","stringify","removeQuery","window","history","pushState","location","pathname","newurl","protocol","host","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","extractLocations","events","map","event","Set","getEvents","NProgress","start","href","startsWith","done","navigator","onLine","data","localStorage","getItem","getAccessToken","token","url","axios","get","locations","setItem","tokenCheck","removeItem","searchParams","URLSearchParams","search","code","results","authUrl","getToken","encodeCode","encodeURIComponent","access_token","Event","state","summary","description","dateTime","timeZone","show","handleShowButton","setState","this","props","eventDateTime","Date","toLocaleString","weekday","month","day","year","timeZoneName","extractDateTime","eventTime","className","onClick","Component","EventList","id","Alert","getStyle","color","style","text","InfoAlert","ErrorAlert","CitySearch","query","suggestions","showSuggestions","handleInputChanged","value","target","filter","toUpperCase","indexOf","length","infoText","handleItemClicked","suggestion","updateCitySearch","handleClose","type","onChange","onFocus","display","NumberOfEvents","numberOfEvents","errorText","e","updateNumberOfEvents","placeholder","Loader","src","Spinner","alt","App","currentCity","loading","updateEvents","console","log","locationEvents","slice","mounted","eventNumber","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","atatus","install","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","headers","response","contentType","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.df1aa394.chunk.js","sourcesContent":["let mockData = [\r\n    {\r\n        \"kind\": \"calendar#event\",\r\n        \"etag\": \"\\\"3181161784712000\\\"\",\r\n        \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\r\n        \"status\": \"confirmed\",\r\n        \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n        \"created\": \"2020-05-19T19:17:46.000Z\",\r\n        \"updated\": \"2020-05-27T12:01:32.356Z\",\r\n        \"summary\": \"Learn JavaScript\",\r\n        \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\r\n        \"location\": \"London, UK\",\r\n        \"creator\": {\r\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n            \"self\": true\r\n        },\r\n        \"organizer\": {\r\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n            \"self\": true\r\n        },\r\n        \"start\": {\r\n            \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"end\": {\r\n            \"dateTime\": \"2020-05-19T17:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\r\n        \"originalStartTime\": {\r\n            \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\r\n        \"sequence\": 0,\r\n        \"reminders\": {\r\n            \"useDefault\": true\r\n        },\r\n        \"eventType\": \"default\"\r\n    },\r\n    {\r\n        \"kind\": \"calendar#event\",\r\n        \"etag\": \"\\\"3181159875584000\\\"\",\r\n        \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\r\n        \"status\": \"confirmed\",\r\n        \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n        \"created\": \"2020-05-19T19:14:30.000Z\",\r\n        \"updated\": \"2020-05-27T11:45:37.792Z\",\r\n        \"summary\": \"React is Fun\",\r\n        \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\r\n        \"location\": \"Berlin, Germany\",\r\n        \"creator\": {\r\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n            \"self\": true\r\n        },\r\n        \"organizer\": {\r\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n            \"self\": true\r\n        },\r\n        \"start\": {\r\n            \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"end\": {\r\n            \"dateTime\": \"2020-05-20T15:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\r\n        \"originalStartTime\": {\r\n            \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\r\n        \"sequence\": 0,\r\n        \"reminders\": {\r\n            \"useDefault\": true\r\n        },\r\n        \"eventType\": \"default\"\r\n    }\r\n];\r\n\r\nmockData = JSON.parse(JSON.stringify(mockData));\r\n\r\nexport { mockData }","import { mockData } from './mock-data';\r\nimport NProgress from 'nprogress';\r\nimport axios from 'axios';\r\n\r\nconst removeQuery = () => {\r\n    if (window.history.pushState && window.location.pathname) {\r\n        var newurl =\r\n            window.location.protocol + \r\n            \"//\" +\r\n            window.location.host +\r\n            window.location.pathname;\r\n        window.history.pushState(\"\", \"\", newurl);\r\n    } else {\r\n        newurl = window.location.protocol + \"//\" + window.location.host;\r\n        window.history.pushState(\"\", \"\", newurl);\r\n    }\r\n};\r\n\r\nconst checkToken = async (accessToken) => {\r\n    const result = await fetch(`https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`)\r\n        .then((res) => res.json())\r\n        .catch((error) => error.json());\r\n\r\n    return result\r\n}\r\n\r\nconst extractLocations = (events) => {\r\n    var extractLocations = events.map((event) => event.location);\r\n    var locations = [...new Set(extractLocations)];\r\n    \r\n    return locations;\r\n};\r\n\r\nconst getEvents = async () => {\r\n    NProgress.start();\r\n  \r\n    if (window.location.href.startsWith('http://localhost')) {\r\n      NProgress.done();\r\n      return mockData;\r\n    }\r\n\r\n    if(!navigator.onLine) {\r\n        const data = localStorage.getItem('lastEvents');\r\n        NProgress.done();\r\n        return data ? JSON.parse(data).events : [];\r\n    }\r\n\r\n    const token = await getAccessToken();\r\n  \r\n        if (token) {\r\n          removeQuery();\r\n          const url = 'https://k3o9f64iji.execute-api.us-west-2.amazonaws.com/dev/api/get-events/' + token;\r\n          const result = await axios.get(url);\r\n      \r\n          if (result.data) {\r\n            var locations = extractLocations(result.data.events);\r\n            localStorage.setItem('lastEvents', JSON.stringify(result.data));\r\n            localStorage.setItem('locations', JSON.stringify(locations));\r\n          }\r\n          NProgress.done();\r\n          return result.data.events;\r\n        }\r\n      };\r\n\r\nconst getAccessToken = async () => {\r\n    const accessToken = localStorage.getItem('access_token');\r\n    const tokenCheck = accessToken && (await checkToken(accessToken));\r\n\r\n    if (!accessToken || tokenCheck.error) {\r\n        await localStorage.removeItem('access_token');\r\n        const searchParams = new URLSearchParams(window.location.search);\r\n        const code = await searchParams.get('code');\r\n        \r\n        if (!code) {\r\n            const results = await axios.get(\"https://k3o9f64iji.execute-api.us-west-2.amazonaws.com/dev/api/get-auth-url\");\r\n            \r\n            const { authUrl } = results.data;\r\n            return (window.location.href = authUrl);\r\n        }\r\n        return code && getToken(code);\r\n    }\r\n    return accessToken;\r\n}\r\n\r\nconst getToken = async (code) => {\r\n    const encodeCode = encodeURIComponent(code);\r\n    const { access_token } = await fetch(\r\n        'https://k3o9f64iji.execute-api.us-west-2.amazonaws.com/dev/api/token/' + encodeCode\r\n    )\r\n        .then((res) => {\r\n            return res.json();\r\n        })\r\n        .catch((error) => error);\r\n\r\n    access_token && localStorage.setItem('access_token', access_token);\r\n\r\n    return access_token;\r\n};\r\n\r\nconst extractDateTime = event => {\r\n    const dateTimeOptions = { weekday: 'short', month: 'short', day: 'numeric', year: 'numeric', timeZoneName: 'long' };\r\n    const eventDateTime = new Date(event.start.dateTime).toLocaleString([], dateTimeOptions);\r\n    return eventDateTime;\r\n}\r\n\r\nexport { getEvents, getAccessToken, extractLocations, getToken, checkToken, extractDateTime };","import React, { Component } from 'react';\r\n// import { mockData } from './mock-data';\r\nimport { extractDateTime } from './api';\r\n\r\nclass Event extends Component {\r\n   \r\n    state = {\r\n        summary: \"\",\r\n        description: \"\",\r\n        location: \"\",\r\n        dateTime: \"\",\r\n        timeZone: \"\",\r\n        show: false\r\n    };\r\n\r\n    handleShowButton = () => {\r\n        if (this.state.show === true) {\r\n            this.setState({ show: false});\r\n        } else {\r\n            this.setState({ show: true});\r\n        }\r\n    };   \r\n\r\n    render() {\r\n        const { event } = this.props;\r\n        const eventDateTime = extractDateTime(event);\r\n        const eventTime = `${eventDateTime}`;\r\n\r\n        return (\r\n            <div className=\"event\">\r\n                <div className=\"event-list\">\r\n                    <h1 className=\"event-title\">\r\n                        {event.summary}\r\n                    </h1>\r\n                    <p className=\"event-location\">\r\n                        {event.location}\r\n                    </p>\r\n                    <p className=\"event-dateTime\">\r\n                        { eventTime }\r\n                        {/* start: {event.start.dateTime} - {event.start.timeZone} */}\r\n                    </p>\r\n                   \r\n                    <button \r\n                        onClick = { () => this.handleShowButton()}\r\n                        className=\"details-btn\">\r\n                            {/* Show more */}\r\n                            {!this.state.show ? 'Show Details' : 'Hide Details'}\r\n                    </button>\r\n                    { this.state.show === true && \r\n                        (<div className=\"details\">\r\n                            <h2>About Event: </h2>\r\n                            <p>{event.description}</p>\r\n                        </div> )\r\n                    }\r\n                </div>                    \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Event;","import React, { Component } from 'react';\r\nimport Event from './Event';\r\n\r\nclass EventList extends Component {\r\n    render() {\r\n        const { events } = this.props;\r\n        return (\r\n\r\n            <ul className=\"EventList\">\r\n                {events.map((event) =>\r\n                    <li key={event.id}>\r\n                        <Event event={event} />\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EventList;","import React, { Component } from 'react';\r\n\r\nclass Alert extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.color = null;\r\n    }\r\n\r\n    getStyle = () => {\r\n        return {\r\n            color: this.color,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Alert\">\r\n                <p style={this.getStyle()}>\r\n                    {this.props.text}\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass InfoAlert extends Alert {\r\n    constructor(props) {\r\n        super(props);\r\n        this.color = 'blue';\r\n    }\r\n}\r\n\r\nclass ErrorAlert extends Alert {\r\n    constructor(props) {\r\n        super(props);\r\n        this.color = 'red';\r\n    }\r\n}\r\n\r\nexport { InfoAlert, ErrorAlert };","import React, { Component} from 'react';\r\nimport { InfoAlert } from './Alert';\r\n\r\nclass CitySearch extends Component {\r\n    state = {\r\n        query: '',\r\n        // locations: this.props.locations,\r\n        suggestions: [],\r\n        showSuggestions: false\r\n    }\r\n\r\n    handleInputChanged = (event) => {\r\n        const value = event.target.value;\r\n        this.setState({ showSuggestions: true });\r\n        const suggestions = this.props.locations.filter((location) => {\r\n            return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n        });\r\n        if ( suggestions.length === 0) {\r\n            this.setState({\r\n                query: '',\r\n                infoText: 'We can\\'t find that city. Please try another city.',\r\n            });\r\n        } else {\r\n            this.setState({\r\n                query: value,\r\n                suggestions,\r\n                // showSuggestions: false,\r\n                infoText: ''\r\n            });\r\n        }\r\n\r\n        // this.setState({ \r\n        //     query: value,\r\n        //     suggestions,\r\n        //  });\r\n    };\r\n\r\n    handleItemClicked = (suggestion) => {\r\n        this.setState({\r\n            query: suggestion,\r\n            // suggestions: [],\r\n            infoText: '',\r\n            showSuggestions: false,\r\n           \r\n        });\r\n        // this.props.updateEvents(suggestion);\r\n        this.props.updateCitySearch(suggestion);\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            showSuggestions: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"CitySearch\">\r\n\r\n                <label>Search City:</label>\r\n                <InfoAlert text={this.state.infoText} />\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"city\"\r\n                    value={this.state.query}\r\n                    onChange={this.handleInputChanged}\r\n                    onFocus={() => { this.setState({ showSuggestions: true }) }}\r\n                />\r\n                \r\n                <ul className=\"suggestions\"\r\n                    style={this.state.showSuggestions ? {}: { display: 'none' }}\r\n                >\r\n                    <span \r\n                        className=\"close\"\r\n                        onClick={() => this.handleClose()}\r\n                    >x</span>\r\n                    {this.state.suggestions.map((suggestion) => (\r\n                        <li key={suggestion}\r\n                            onClick={() => this.handleItemClicked(suggestion)}\r\n                        >\r\n                                {suggestion}\r\n                        </li>\r\n                    ))}\r\n                    <li key={'all'}\r\n                        onClick={() => this.handleItemClicked(\"all\")}>\r\n                        <b>See all cities</b>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CitySearch","import React, { Component } from 'react';\r\nimport { ErrorAlert } from './Alert';\r\n\r\nclass NumberOfEvents extends Component {\r\n    \r\n    state= {\r\n        numberOfEvents: 15,\r\n        errorText: ''\r\n    };\r\n\r\n    handleInputChanged = (e) => {\r\n        const value = e.target.value;\r\n\r\n        if (value < 1 || value > 32) {\r\n            this.setState({\r\n                numberOfEvents: '',\r\n                errorText: 'Enter a number between 1 and 32.',\r\n            });\r\n        } else {\r\n            this.setState({\r\n                numberOfEvents: value,\r\n                errorText: '',\r\n            });\r\n            this.props.updateNumberOfEvents(value);\r\n        }\r\n        \r\n        // this.setState({\r\n        //     numberOfEvents: value\r\n        // });\r\n\r\n        // this.props.updateNumberOfEvents(value);\r\n\r\n    }\r\n\r\n    render() {\r\n        const numberOfEvents = this.state.numberOfEvents;\r\n        return (\r\n            <div className='NumberOfEvents'>\r\n                <label \r\n                    className='number-label'>\r\n                    Number of Events:\r\n                </label>\r\n\r\n                <ErrorAlert text={this.state.errorText} />\r\n\r\n                <input \r\n                    type='number' \r\n                    id='number-of-events' \r\n                    className='number-events' \r\n                    value={numberOfEvents}\r\n                    onChange={(e) => this.handleInputChanged(e)} \r\n                    placeholder={numberOfEvents}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NumberOfEvents","export default __webpack_public_path__ + \"static/media/Spinner.b4e24b01.svg\";","import React, { Component } from 'react';\r\nimport Spinner from './img/Spinner.svg';\r\n\r\nclass Loader extends Component {\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"loader\">\r\n                <img src={Spinner} alt=\"loading spinner\"></img>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Loader;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport EventList from './EventList';\r\nimport CitySearch from './CitySearch';\r\nimport NumberOfEvents from './NumberOfEvents';\r\nimport { extractLocations, getEvents, checkToken, getAccessToken } from './api';\r\nimport Loader from './Loader';\r\n// import WelcomeScreen from './WelcomeScreen';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    events: [],\r\n    locations: [],\r\n    numberOfEvents: 15,\r\n    currentCity: 'all',\r\n    loading: true,\r\n    // showWelcomeScreen: undefined\r\n  }\r\n\r\n  updateEvents = (location, numberOfEvents) => {\r\n    console.log('events');\r\n    getEvents().then((events) => {\r\n      const locationEvents = (location === 'all')\r\n      ?\r\n        events.slice(0, numberOfEvents)\r\n      :\r\n        events.filter((event) => event.location === location);\r\n      if (this.mounted) {\r\n        this.setState({\r\n        events: locationEvents.slice(0, numberOfEvents),\r\n        currentCity: location\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  // updateCitySearch = (location) => {\r\n  //   this.setState({ currentCity: location });\r\n  //   const { numberOfEvents } = this.state;\r\n  //   this.updateEvents(location, numberOfEvents);\r\n  // }\r\n\r\n  updateCitySearch(location) {\r\n    console.log('CitySearch');\r\n    this.setState({ currentCity: location });\r\n    const { numberOfEvents } = this.state;\r\n    this.updateEvents(location, numberOfEvents);\r\n  }\r\n\r\n  updateNumberOfEvents(eventNumber) {\r\n    console.log('NumberOfEvents')\r\n    this.setState({ numberOfEvents: eventNumber });\r\n    const { currentCity } = this.state;\r\n    this.updateEvents(currentCity, eventNumber);\r\n  }\r\n\r\n  // componentWillMount() {\r\n  //   this.setState({ loading: true });\r\n  // }\r\n\r\n  async componentDidMount() {\r\n   \r\n    const { numberOfEvents } = this.state;\r\n    this.mounted = true;\r\n\r\n    // const accessToken = localStorage.getItem('access_token');\r\n    // const isTokenValid = (await checkToken(accessToken)).error ? false : true;\r\n    // const searchParams = new URLSearchParams(window.location.search);\r\n    // const code = searchParams.get(\"code\");\r\n\r\n    // this.setState({ showWelcomeScreen: !(code || isTokenValid) });\r\n    // if ((code || isTokenValid) && this.mounted) {\r\n\r\n      getEvents().then((events) => {\r\n        if (this.mounted) {\r\n        this.setState({ \r\n          events: events.slice(0, numberOfEvents), \r\n          locations: extractLocations(events),\r\n          loading: false \r\n          });\r\n        }\r\n      });\r\n      // if (!navigator.onLine) {\r\n      //   this.setState({\r\n      //     infoText:\r\n      //       \"You are offline. Events displayed may not be up-to-date\",\r\n      //   });\r\n      // } else {\r\n      //   this.setState({\r\n      //     infoText: \"\",\r\n      //   });\r\n      // }\r\n    // }\r\n  }\r\n  render() {\r\n    // if (this.state.showWelcomScreen === undefined) \r\n    //   return <div className=\"App\" />\r\n    \r\n    return (\r\n      <div className=\"App\">\r\n        <h1 className=\"title\">\r\n          Meet App\r\n        </h1>\r\n\r\n        <CitySearch  \r\n          updateCitySearch={(e) => this.updateCitySearch(e)}\r\n          locations={this.state.locations} \r\n          // updateEvents={this.updateEvents}\r\n          // numberOfEvents={this.state.numberOfEvents}  \r\n          // events={this.state.events}\r\n        />\r\n\r\n        <NumberOfEvents \r\n          updateNumberOfEvents={(e) => this.updateNumberOfEvents(e)}\r\n          // numberOfEvents={this.state.numberOfEvents}\r\n        />\r\n\r\n        { this.state.loading ? <Loader /> : ''}\r\n\r\n        <EventList \r\n          events={this.state.events} \r\n          numberOfEvents={this.state.numberOfEvents}\r\n        />\r\n\r\n        {/* <WelcomeScreen showWelcomeScreen={this.state.showWelcomeScreen}\r\n          getAccessToken={() => { getAccessToken() }} /> */}\r\n      </div>\r\n    );  \r\n  }\r\n  \r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport * as atatus from 'atatus-spa';\r\natatus.config('07175dfa51824c39be6773ac580969b0').install();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\n// serviceWorkerRegistration.unregister();\r\nserviceWorkerRegistration.register();\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\n"],"sourceRoot":""}
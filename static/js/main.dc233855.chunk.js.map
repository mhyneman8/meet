{"version":3,"sources":["Event.js","EventList.js","CitySearch.js","NumberOfEvents.js","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","summary","description","location","dateTime","timeZone","show","handleShowButton","setState","event","this","props","className","start","onClick","Component","EventList","events","map","id","CitySearch","query","suggestions","showSuggestions","undefined","handleInputChanged","value","target","locations","filter","toUpperCase","indexOf","handleItemClicked","suggestion","updateEvents","type","onChange","onFocus","style","display","NumberOfEvents","numberOfEvents","e","placeholder","mockData","JSON","parse","stringify","removeQuery","window","history","pushState","pathname","newurl","protocol","host","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","extractLocations","Set","getEvents","NProgress","href","startsWith","done","getAccessToken","token","url","axios","get","data","localStorage","setItem","getItem","tokenCheck","removeItem","searchParams","URLSearchParams","search","code","results","authUrl","getToken","encodeCode","encodeURIComponent","access_token","App","eventNumber","locationEvents","slice","currentCity","mounted","updateNumbeOfEvents","updateNumberOfEvents","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"sOAwDeA,E,4MAnDXC,MAAQ,CACJC,QAAS,GACTC,YAAa,GACbC,SAAU,GACVC,SAAU,GACVC,SAAU,GACVC,MAAM,G,EAGVC,iBAAmB,YACS,IAApB,EAAKP,MAAMM,KACX,EAAKE,SAAS,CAAEF,MAAM,IAEtB,EAAKE,SAAS,CAAEF,MAAM,K,4CAI9B,WAAU,IAAD,OACGG,EAAUC,KAAKC,MAAfF,MAER,OACI,qBAAKG,UAAU,QAAf,SACI,sBAAKA,UAAU,aAAf,UACI,oBAAIA,UAAU,cAAd,SACKH,EAAMR,UAEX,mBAAGW,UAAU,iBAAb,SACKH,EAAMN,WAEX,oBAAGS,UAAU,iBAAb,oBACYH,EAAMI,MAAMT,SADxB,MACqCK,EAAMI,MAAMR,YAGjD,wBACIS,QAAY,kBAAM,EAAKP,oBACvBK,UAAU,YAFd,SAIUF,KAAKV,MAAMM,KAAwB,eAAjB,kBAEN,IAApBI,KAAKV,MAAMM,MACR,sBAAKM,UAAU,UAAf,UACG,+CACA,4BAAIH,EAAMP,0B,GA5ClBa,aCeLC,E,4JAdX,WACI,IAAQC,EAAWP,KAAKC,MAAhBM,OACR,OACI,oBAAIL,UAAU,YAAd,SACKK,EAAOC,KAAI,SAACT,GAAD,OACR,6BACI,cAAC,EAAD,CAAOA,MAAOA,KADTA,EAAMU,a,GANXJ,aC6DTK,E,4MA7DXpB,MAAQ,CACJqB,MAAO,GAEPC,YAAa,GACbC,qBAAiBC,G,EAGrBC,mBAAqB,SAAChB,GAClB,IAAMiB,EAAQjB,EAAMkB,OAAOD,MAErBJ,EAAc,EAAKX,MAAMiB,UAAUC,QAAO,SAAC1B,GAC7C,OAAOA,EAAS2B,cAAcC,QAAQL,EAAMI,gBAAkB,KAGlE,EAAKtB,SAAS,CACVa,MAAOK,EACPJ,iB,EAIRU,kBAAoB,SAACC,GACjB,EAAKzB,SAAS,CACVa,MAAOY,EACPX,YAAa,GACbC,iBAAiB,IAErB,EAAKZ,MAAMuB,aAAaD,I,4CAG5B,WAAU,IAAD,OACL,OACI,sBAAKrB,UAAU,aAAf,UACI,iDACA,uBACIuB,KAAK,OACLvB,UAAU,OACVc,MAAOhB,KAAKV,MAAMqB,MAClBe,SAAU1B,KAAKe,mBACfY,QAAS,WAAQ,EAAK7B,SAAS,CAAEe,iBAAiB,OAGtD,qBAAIX,UAAU,cACV0B,MAAO5B,KAAKV,MAAMuB,gBAAkB,GAAI,CAAEgB,QAAS,QADvD,UAGK7B,KAAKV,MAAMsB,YAAYJ,KAAI,SAACe,GAAD,OACxB,oBACInB,QAAS,kBAAM,EAAKkB,kBAAkBC,IAD1C,SAGSA,GAHAA,MAMb,oBACInB,QAAS,kBAAM,EAAKkB,kBAAkB,QAD1C,SAEI,2D,GAtDCjB,aCuCVyB,E,4MAnCXxC,MAAO,CACHyC,eAAgB,I,EAGpBhB,mBAAqB,SAAChB,GAClB,IAAMiB,EAAQjB,EAAMkB,OAAOD,MAE3B,EAAKlB,SAAS,CACViC,eAAgBf,K,4CAMxB,WAAU,IAAD,OACCe,EAAiB/B,KAAKV,MAAMyC,eAClC,OACI,sBAAK7B,UAAU,iBAAf,UACI,uBACIA,UAAU,eADd,+BAIA,uBACIuB,KAAK,SACLhB,GAAG,gBACHP,UAAU,gBACVc,MAAOe,EACPL,SAAU,SAACM,GAAD,OAAO,EAAKjB,mBAAmBiB,IACzCC,YAAaF,W,GA9BJ1B,a,+BCJzB6B,EAAW,CACX,CACI,KAAQ,iBACR,KAAQ,qBACR,GAAM,8CACN,OAAU,YACV,SAAY,oJACZ,QAAW,2BACX,QAAW,2BACX,QAAW,mBACX,YAAe,uWACf,SAAY,aACZ,QAAW,CACP,MAAS,oCACT,MAAQ,GAEZ,UAAa,CACT,MAAS,oCACT,MAAQ,GAEZ,MAAS,CACL,SAAY,4BACZ,SAAY,iBAEhB,IAAO,CACH,SAAY,4BACZ,SAAY,iBAEhB,iBAAoB,6BACpB,kBAAqB,CACjB,SAAY,4BACZ,SAAY,iBAEhB,QAAW,wCACX,SAAY,EACZ,UAAa,CACT,YAAc,GAElB,UAAa,WAEjB,CACI,KAAQ,iBACR,KAAQ,qBACR,GAAM,8CACN,OAAU,YACV,SAAY,oJACZ,QAAW,2BACX,QAAW,2BACX,QAAW,eACX,YAAe,mSACf,SAAY,kBACZ,QAAW,CACP,MAAS,oCACT,MAAQ,GAEZ,UAAa,CACT,MAAS,oCACT,MAAQ,GAEZ,MAAS,CACL,SAAY,4BACZ,SAAY,iBAEhB,IAAO,CACH,SAAY,4BACZ,SAAY,iBAEhB,iBAAoB,6BACpB,kBAAqB,CACjB,SAAY,4BACZ,SAAY,iBAEhB,QAAW,wCACX,SAAY,EACZ,UAAa,CACT,YAAc,GAElB,UAAa,YAIrBA,EAAWC,KAAKC,MAAMD,KAAKE,UAAUH,I,qCC7E/BI,EAAc,WAChB,GAAIC,OAAOC,QAAQC,WAAaF,OAAO9C,SAASiD,SAAU,CACtD,IAAIC,EACAJ,OAAO9C,SAASmD,SAChB,KACAL,OAAO9C,SAASoD,KAChBN,OAAO9C,SAASiD,SACpBH,OAAOC,QAAQC,UAAU,GAAI,GAAIE,QAEjCA,EAASJ,OAAO9C,SAASmD,SAAW,KAAOL,OAAO9C,SAASoD,KAC3DN,OAAOC,QAAQC,UAAU,GAAI,GAAIE,IAInCG,EAAU,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACMC,MAAM,+DAAD,OAAgEF,IACrFG,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBC,OAAM,SAACC,GAAD,OAAWA,EAAMF,UAHb,cACTG,EADS,yBAKRA,GALQ,2CAAH,sDAQVC,EAAmB,SAACjD,GACtB,IAAIiD,EAAmBjD,EAAOC,KAAI,SAACT,GAAD,OAAWA,EAAMN,YAGnD,OAFa,YAAO,IAAIgE,IAAID,KAK1BE,EAAS,uCAAG,kCAAAV,EAAA,yDACdW,IAAUxD,SAENoC,OAAO9C,SAASmE,KAAKC,WAAW,oBAHtB,uBAIZF,IAAUG,OAJE,kBAKL5B,GALK,uBAQM6B,IARN,YAQRC,EARQ,gCAWR1B,IACM2B,EAAM,6EAA+ED,EAZnF,UAaaE,IAAMC,IAAIF,GAbvB,eAaFV,EAbE,QAeGa,OACLlD,EAAYsC,EAAiBD,EAAOa,KAAK7D,QAC7C8D,aAAaC,QAAQ,aAAcnC,KAAKE,UAAUkB,EAAOa,OACzDC,aAAaC,QAAQ,YAAanC,KAAKE,UAAUnB,KAEnDyC,IAAUG,OApBF,kBAqBDP,EAAOa,KAAK7D,QArBX,4CAAH,qDAyBTwD,EAAc,uCAAG,sCAAAf,EAAA,yDACbD,EAAcsB,aAAaE,QAAQ,gBADtB,KAEAxB,GAFA,qCAEsBD,EAAWC,GAFjC,6BAEbyB,EAFa,KAIdzB,IAAeyB,EAAWlB,MAJZ,kCAKTe,aAAaI,WAAW,gBALf,eAMTC,EAAe,IAAIC,gBAAgBpC,OAAO9C,SAASmF,QAN1C,UAOIF,EAAaP,IAAI,QAPrB,WAOTU,EAPS,yCAUWX,IAAMC,IAAI,+EAVrB,eAULW,EAVK,OAYHC,EAAYD,EAAQV,KAApBW,QAZG,kBAaHxC,OAAO9C,SAASmE,KAAOmB,GAbpB,iCAeRF,GAAQG,EAASH,IAfT,iCAiBZ9B,GAjBY,4CAAH,qDAoBdiC,EAAQ,uCAAG,WAAOH,GAAP,mBAAA7B,EAAA,6DACPiC,EAAaC,mBAAmBL,GADzB,SAEkB5B,MAC3B,wEAA+EgC,GAE9E/B,MAAK,SAACC,GACH,OAAOA,EAAIC,UAEdC,OAAM,SAACC,GAAD,OAAWA,KART,wBAEL6B,EAFK,EAELA,eAQQd,aAAaC,QAAQ,eAAgBa,GAVxC,kBAYNA,GAZM,2CAAH,sDCACC,E,4MAtEb9F,MAAQ,CACNiB,OAAQ,GACRW,UAAW,GACXmE,YAAa,I,EAKf7D,aAAe,SAAC/B,EAAUsC,GACxB2B,IAAYR,MAAK,SAAC3C,GAChB,IAAM+E,EAA+B,QAAb7F,EAEtBc,EAAOgF,MAAM,EAAGxD,GAEhBxB,EAAOY,QAAO,SAACpB,GAAD,OAAWA,EAAMN,WAAaA,KAC9C,EAAKK,SAAS,CACZS,OAAQ+E,EAAeC,MAAM,EAAGxD,GAChCyD,YAAa/F,Q,0DAKnB,SAAqB4F,GACnBrF,KAAKF,SAAS,CAAEiC,eAAgBsD,IAChC,IAAQG,EAAgBxF,KAAKV,MAArBkG,YACRxF,KAAKwB,aAAagE,EAAaH,K,+BAKjC,WAAqB,IAAD,OAClBrF,KAAKyF,SAAU,EACf/B,IAAYR,MAAK,SAAC3C,GACZ,EAAKkF,SACT,EAAK3F,SAAS,CAAES,SAAQW,UAAWsC,EAAiBjD,U,mCAMxD,WACEP,KAAKyF,SAAU,I,oBAGjB,WAAU,IAAD,OACP,OAEE,sBAAKvF,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,sBAIA,cAAC,EAAD,CACEgB,UAAWlB,KAAKV,MAAM4B,UACtBM,aAAcxB,KAAKwB,aACnBO,eAAgB/B,KAAKV,MAAMyC,eAC3BxB,OAAQP,KAAKV,MAAMiB,SAGrB,cAAC,EAAD,CACEmF,oBAAqB,SAAC1D,GAAD,OAAO,EAAK2D,qBAAqB3D,MAGxD,cAAC,EAAD,CAAWzB,OAAQP,KAAKV,MAAMiB,gB,GAhEpBF,aCKEuF,QACW,cAA7BrD,OAAO9C,SAASoG,UAEe,UAA7BtD,OAAO9C,SAASoG,UAEhBtD,OAAO9C,SAASoG,SAASC,MAAM,2DCjBnC,IAYeC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqB/C,MAAK,YAAkD,IAA/CgD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SFoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB5D,MAAK,SAAC6D,GACLA,EAAaC,gBAEd3D,OAAM,SAACC,GACN2D,QAAQ3D,MAAMA,EAAM4D,YE/G5BnB,M","file":"static/js/main.dc233855.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n// import { mockData } from './mock-data';\r\n\r\nclass Event extends Component {\r\n   \r\n    state = {\r\n        summary: \"\",\r\n        description: \"\",\r\n        location: \"\",\r\n        dateTime: \"\",\r\n        timeZone: \"\",\r\n        show: false\r\n    };\r\n\r\n    handleShowButton = () => {\r\n        if (this.state.show === true) {\r\n            this.setState({ show: false});\r\n        } else {\r\n            this.setState({ show: true});\r\n        }\r\n    };   \r\n\r\n    render() {\r\n        const { event } = this.props;\r\n\r\n        return (\r\n            <div className=\"event\">\r\n                <div className=\"event-list\">\r\n                    <h1 className=\"event-title\">\r\n                        {event.summary}\r\n                    </h1>\r\n                    <p className=\"event-location\">\r\n                        {event.location}\r\n                    </p>\r\n                    <p className=\"event-dateTime\">\r\n                        start: {event.start.dateTime} - {event.start.timeZone}\r\n                    </p>\r\n                   \r\n                    <button \r\n                        onClick = { () => this.handleShowButton()}\r\n                        className=\"show-more\">\r\n                            {/* Show more */}\r\n                            {!this.state.show ? 'Show Details' : 'Hide Details'}\r\n                    </button>\r\n                    { this.state.show === true && \r\n                        (<div className=\"details\">\r\n                            <h2>About Event: </h2>\r\n                            <p>{event.description}</p>\r\n                        </div> )\r\n                    }\r\n                </div>                    \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Event;","import React, { Component } from 'react';\r\nimport Event from './Event';\r\n\r\nclass EventList extends Component {\r\n    render() {\r\n        const { events } = this.props;\r\n        return (\r\n            <ul className=\"EventList\">\r\n                {events.map((event) =>\r\n                    <li key={event.id}>\r\n                        <Event event={event} />\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EventList;","import React, { Component} from 'react';\r\n\r\nclass CitySearch extends Component {\r\n    state = {\r\n        query: '',\r\n        // locations: this.props.locations,\r\n        suggestions: [],\r\n        showSuggestions: undefined\r\n    }\r\n\r\n    handleInputChanged = (event) => {\r\n        const value = event.target.value;\r\n        // this.setState({ showSuggestions: true });\r\n        const suggestions = this.props.locations.filter((location) => {\r\n            return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n        });\r\n\r\n        this.setState({ \r\n            query: value,\r\n            suggestions,\r\n         });\r\n    };\r\n\r\n    handleItemClicked = (suggestion) => {\r\n        this.setState({\r\n            query: suggestion,\r\n            suggestions: [],\r\n            showSuggestions: false\r\n        });\r\n        this.props.updateEvents(suggestion);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"CitySearch\">\r\n                <label>Search City:</label>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"city\"\r\n                    value={this.state.query}\r\n                    onChange={this.handleInputChanged}\r\n                    onFocus={() => { this.setState({ showSuggestions: true }) }}\r\n                />\r\n                \r\n                <ul className=\"suggestions\"\r\n                    style={this.state.showSuggestions ? {}: { display: 'none' }}\r\n                >\r\n                    {this.state.suggestions.map((suggestion) => (\r\n                        <li key={suggestion}\r\n                            onClick={() => this.handleItemClicked(suggestion)}\r\n                        >\r\n                                {suggestion}\r\n                        </li>\r\n                    ))}\r\n                    <li\r\n                        onClick={() => this.handleItemClicked(\"all\")}>\r\n                        <b>See all cities</b>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CitySearch","import React, { Component } from 'react';\r\n// import { mockData } from './mock-data';\r\n// import { getEvents } from './api';\r\n\r\nclass NumberOfEvents extends Component {\r\n    \r\n    state= {\r\n        numberOfEvents: 15,\r\n    };\r\n\r\n    handleInputChanged = (event) => {\r\n        const value = event.target.value;\r\n    \r\n        this.setState({\r\n            numberOfEvents: value\r\n        });\r\n        // this.props.updateNumberOfEvents(event.target.value);\r\n    }\r\n\r\n\r\n    render() {\r\n        const numberOfEvents = this.state.numberOfEvents;\r\n        return (\r\n            <div className='NumberOfEvents'>\r\n                <label \r\n                    className='number-label'>\r\n                    Number of Events:\r\n                </label>\r\n                <input \r\n                    type='number' \r\n                    id='number-events' \r\n                    className='number-events' \r\n                    value={numberOfEvents}\r\n                    onChange={(e) => this.handleInputChanged(e)} \r\n                    placeholder={numberOfEvents}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NumberOfEvents","let mockData = [\r\n    {\r\n        \"kind\": \"calendar#event\",\r\n        \"etag\": \"\\\"3181161784712000\\\"\",\r\n        \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\r\n        \"status\": \"confirmed\",\r\n        \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n        \"created\": \"2020-05-19T19:17:46.000Z\",\r\n        \"updated\": \"2020-05-27T12:01:32.356Z\",\r\n        \"summary\": \"Learn JavaScript\",\r\n        \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\r\n        \"location\": \"London, UK\",\r\n        \"creator\": {\r\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n            \"self\": true\r\n        },\r\n        \"organizer\": {\r\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n            \"self\": true\r\n        },\r\n        \"start\": {\r\n            \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"end\": {\r\n            \"dateTime\": \"2020-05-19T17:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\r\n        \"originalStartTime\": {\r\n            \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\r\n        \"sequence\": 0,\r\n        \"reminders\": {\r\n            \"useDefault\": true\r\n        },\r\n        \"eventType\": \"default\"\r\n    },\r\n    {\r\n        \"kind\": \"calendar#event\",\r\n        \"etag\": \"\\\"3181159875584000\\\"\",\r\n        \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\r\n        \"status\": \"confirmed\",\r\n        \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n        \"created\": \"2020-05-19T19:14:30.000Z\",\r\n        \"updated\": \"2020-05-27T11:45:37.792Z\",\r\n        \"summary\": \"React is Fun\",\r\n        \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\r\n        \"location\": \"Berlin, Germany\",\r\n        \"creator\": {\r\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n            \"self\": true\r\n        },\r\n        \"organizer\": {\r\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n            \"self\": true\r\n        },\r\n        \"start\": {\r\n            \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"end\": {\r\n            \"dateTime\": \"2020-05-20T15:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\r\n        \"originalStartTime\": {\r\n            \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\r\n        \"sequence\": 0,\r\n        \"reminders\": {\r\n            \"useDefault\": true\r\n        },\r\n        \"eventType\": \"default\"\r\n    }\r\n];\r\n\r\nmockData = JSON.parse(JSON.stringify(mockData));\r\n\r\nexport { mockData }","import { mockData } from './mock-data';\r\nimport NProgress from 'nprogress';\r\nimport axios from 'axios';\r\n\r\nconst removeQuery = () => {\r\n    if (window.history.pushState && window.location.pathname) {\r\n        var newurl =\r\n            window.location.protocol + \r\n            \"//\" +\r\n            window.location.host +\r\n            window.location.pathname;\r\n        window.history.pushState(\"\", \"\", newurl);\r\n    } else {\r\n        newurl = window.location.protocol + \"//\" + window.location.host;\r\n        window.history.pushState(\"\", \"\", newurl);\r\n    }\r\n};\r\n\r\nconst checkToken = async (accessToken) => {\r\n    const result = await fetch(`https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`)\r\n        .then((res) => res.json())\r\n        .catch((error) => error.json());\r\n\r\n    return result\r\n}\r\n\r\nconst extractLocations = (events) => {\r\n    var extractLocations = events.map((event) => event.location);\r\n    var locations = [...new Set(extractLocations)];\r\n    \r\n    return locations;\r\n};\r\n\r\nconst getEvents = async () => {\r\n    NProgress.start();\r\n  \r\n    if (window.location.href.startsWith('http://localhost')) {\r\n      NProgress.done();\r\n      return mockData;\r\n    }\r\n\r\n    const token = await getAccessToken();\r\n  \r\n        if (token) {\r\n          removeQuery();\r\n          const url = 'https://k3o9f64iji.execute-api.us-west-2.amazonaws.com/dev/api/get-events/' + token;\r\n          const result = await axios.get(url);\r\n      \r\n          if (result.data) {\r\n            var locations = extractLocations(result.data.events);\r\n            localStorage.setItem('lastEvents', JSON.stringify(result.data));\r\n            localStorage.setItem('locations', JSON.stringify(locations));\r\n          }\r\n          NProgress.done();\r\n          return result.data.events;\r\n        }\r\n      };\r\n\r\nconst getAccessToken = async () => {\r\n    const accessToken = localStorage.getItem('access_token');\r\n    const tokenCheck = accessToken && (await checkToken(accessToken));\r\n\r\n    if (!accessToken || tokenCheck.error) {\r\n        await localStorage.removeItem('access_token');\r\n        const searchParams = new URLSearchParams(window.location.search);\r\n        const code = await searchParams.get('code');\r\n        \r\n        if (!code) {\r\n            const results = await axios.get(\"https://k3o9f64iji.execute-api.us-west-2.amazonaws.com/dev/api/get-auth-url\");\r\n            \r\n            const { authUrl } = results.data;\r\n            return (window.location.href = authUrl);\r\n        }\r\n        return code && getToken(code);\r\n    }\r\n    return accessToken;\r\n}\r\n\r\nconst getToken = async (code) => {\r\n    const encodeCode = encodeURIComponent(code);\r\n    const { access_token } = await fetch(\r\n        'https://k3o9f64iji.execute-api.us-west-2.amazonaws.com/dev/api/token' + '/' + encodeCode\r\n    )\r\n        .then((res) => {\r\n            return res.json();\r\n        })\r\n        .catch((error) => error);\r\n\r\n    access_token && localStorage.setItem('access_token', access_token);\r\n\r\n    return access_token;\r\n};\r\n\r\nexport { getEvents, getAccessToken, extractLocations, getToken, checkToken };","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport EventList from './EventList';\r\nimport CitySearch from './CitySearch';\r\nimport NumberOfEvents from './NumberOfEvents';\r\nimport { extractLocations, getEvents } from './api';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    events: [],\r\n    locations: [],\r\n    eventNumber: 15,\r\n\r\n  }\r\n\r\n// checked \r\n  updateEvents = (location, numberOfEvents) => {\r\n    getEvents().then((events) => {\r\n      const locationEvents = (location === 'all')\r\n      ?\r\n        events.slice(0, numberOfEvents)\r\n      :\r\n        events.filter((event) => event.location === location);\r\n      this.setState({\r\n        events: locationEvents.slice(0, numberOfEvents),\r\n        currentCity: location\r\n      });\r\n    });\r\n  }\r\n\r\n  updateNumberOfEvents(eventNumber) {\r\n    this.setState({ numberOfEvents: eventNumber });\r\n    const { currentCity } = this.state;\r\n    this.updateEvents(currentCity, eventNumber);\r\n  }\r\n\r\n\r\n// checked\r\n  componentDidMount() {\r\n    this.mounted = true;\r\n    getEvents().then((events) => {\r\n      if (this.mounted) {\r\n      this.setState({ events, locations: extractLocations(events) });\r\n      }\r\n    });\r\n  }\r\n\r\n  // checked\r\n  componenetWillUnmount(){\r\n    this.mounted = false;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      \r\n      <div className=\"App\">\r\n        <h1 className=\"title\">\r\n          Meet App\r\n        </h1>\r\n\r\n        <CitySearch  \r\n          locations={this.state.locations} \r\n          updateEvents={this.updateEvents}\r\n          numberOfEvents={this.state.numberOfEvents}  \r\n          events={this.state.events}\r\n        />\r\n\r\n        <NumberOfEvents \r\n          updateNumbeOfEvents={(e) => this.updateNumberOfEvents(e)}\r\n        />\r\n\r\n        <EventList events={this.state.events} />\r\n      </div>\r\n    );  \r\n  }\r\n  \r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.unregister();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}
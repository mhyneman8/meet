{"version":3,"sources":["mock-data.js","Event.js","EventList.js","CitySearch.js","api.js","NumberOfEvents.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["mockData","JSON","parse","stringify","Event","state","summary","description","location","dateTime","show","handleShowButton","setState","className","this","onClick","Component","EventList","props","events","map","event","id","CitySearch","query","suggestions","showSuggestions","undefined","handleInputChanged","value","target","locations","filter","toUpperCase","indexOf","handleItemClicked","suggestion","updateEvents","type","onChange","onFocus","style","display","removeQuery","window","history","pushState","pathname","newurl","protocol","host","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","extractLocations","Set","getEvents","NProgress","start","href","startsWith","done","getAccessToken","token","url","axios","get","data","localStorage","setItem","getItem","tokenCheck","removeItem","searchParams","URLSearchParams","search","code","results","authUrl","getToken","encodeCode","encodeURIComponent","access_token","NumberOfEvents","eventNumber","placeholder","App","numberOfEvents","locationEvents","mounted","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.3375e9d0.chunk.js","sourcesContent":["let mockData = [\r\n    {\r\n        \"kind\": \"calendar#event\",\r\n        \"etag\": \"\\\"3181161784712000\\\"\",\r\n        \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\r\n        \"status\": \"confirmed\",\r\n        \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n        \"created\": \"2020-05-19T19:17:46.000Z\",\r\n        \"updated\": \"2020-05-27T12:01:32.356Z\",\r\n        \"summary\": \"Learn JavaScript\",\r\n        \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\r\n        \"location\": \"London, UK\",\r\n        \"creator\": {\r\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n            \"self\": true\r\n        },\r\n        \"organizer\": {\r\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n            \"self\": true\r\n        },\r\n        \"start\": {\r\n            \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"end\": {\r\n            \"dateTime\": \"2020-05-19T17:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\r\n        \"originalStartTime\": {\r\n            \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\r\n        \"sequence\": 0,\r\n        \"reminders\": {\r\n            \"useDefault\": true\r\n        },\r\n        \"eventType\": \"default\"\r\n    },\r\n    {\r\n        \"kind\": \"calendar#event\",\r\n        \"etag\": \"\\\"3181159875584000\\\"\",\r\n        \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\r\n        \"status\": \"confirmed\",\r\n        \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n        \"created\": \"2020-05-19T19:14:30.000Z\",\r\n        \"updated\": \"2020-05-27T11:45:37.792Z\",\r\n        \"summary\": \"React is Fun\",\r\n        \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\r\n        \"location\": \"Berlin, Germany\",\r\n        \"creator\": {\r\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n            \"self\": true\r\n        },\r\n        \"organizer\": {\r\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n            \"self\": true\r\n        },\r\n        \"start\": {\r\n            \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"end\": {\r\n            \"dateTime\": \"2020-05-20T15:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\r\n        \"originalStartTime\": {\r\n            \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\r\n        \"sequence\": 0,\r\n        \"reminders\": {\r\n            \"useDefault\": true\r\n        },\r\n        \"eventType\": \"default\"\r\n    }\r\n];\r\n\r\nmockData = JSON.parse(JSON.stringify(mockData));\r\n\r\nexport { mockData }","import React, { Component } from 'react';\r\nimport { mockData } from './mock-data';\r\n\r\nclass Event extends Component {\r\n   \r\n    state = {\r\n        summary: \"\",\r\n        description: \"\",\r\n        location: \"\",\r\n        dateTime: \"\",\r\n        show: false,\r\n    };\r\n\r\n    handleShowButton = () => {\r\n        // this.setstate = { show: !this.state.show };\r\n        if (this.state.show === true) {\r\n            this.setState({ show: false});\r\n        } else {\r\n            this.setState({ show: true});\r\n        }\r\n    };   \r\n\r\n    render() {\r\n     \r\n        return (\r\n            <div className=\"event\">\r\n                <div className=\"event-list\">\r\n                    <h1 className=\"event-title\">\r\n                        {this.state.summary}\r\n                    </h1>\r\n                    <p className=\"event-location\">\r\n                        {this.state.location}\r\n                    </p>\r\n                    <p className=\"event-dateTime\">\r\n                        {this.state.dateTime}\r\n                    </p>\r\n                   \r\n                    <button \r\n                        onClick = { () => this.handleShowButton()}\r\n                        className=\"show-more\">\r\n                            Show more\r\n                    </button>\r\n                    { this.state.show === true && \r\n                        (<div className=\"details\">\r\n                            <h2>About Event: </h2>\r\n                            <p>{this.state.description}</p>\r\n                            <button\r\n                                onClick = {() => this.handleShowButton()}\r\n                                className=\"show-less\">\r\n                                    Show less\r\n                            </button>\r\n                        </div> )\r\n                    }\r\n                </div>                    \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Event;","import React, { Component } from 'react';\r\nimport Event from './Event';\r\n\r\nclass EventList extends Component {\r\n    render() {\r\n        return (\r\n            <ul className=\"EventList\">\r\n                {this.props.events.map(event =>\r\n                    <li key={event.id}>\r\n                        <Event event={event} />\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EventList;","import React, { Component} from 'react';\r\n\r\nclass CitySearch extends Component {\r\n    state = {\r\n        query: '',\r\n        suggestions: [],\r\n        showSuggestions: undefined\r\n    }\r\n\r\n    handleInputChanged = (event) => {\r\n        const value = event.target.value;\r\n        const suggestions = this.props.locations.filter((location) => {\r\n            return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n        });\r\n\r\n        this.setState({ \r\n            query: value,\r\n            suggestions,\r\n         });\r\n    };\r\n\r\n    handleItemClicked = (suggestion) => {\r\n        this.setState({\r\n            query: suggestion,\r\n            showSuggestions: false\r\n        });\r\n        this.props.updateEvents(suggestion);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"CitySearch\">\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"city\"\r\n                    value={this.state.query}\r\n                    onChange={this.handleInputChanged}\r\n                    onFocus={() => { this.setState({ showSuggestions: true }) }}\r\n                />\r\n                <ul className=\"suggestions\"\r\n                    style={this.state.showSuggestions ? {}: { display: 'none' }}>\r\n                    {this.state.suggestions.map((suggestion) => (\r\n                        <li key={suggestion}\r\n                            onClick={() => this.handleItemClicked(suggestion)}\r\n                        >{suggestion}</li>\r\n                    ))}\r\n                    <li onClick={() => this.handleItemClicked(\"all\")}>\r\n                        <b>See all cities</b>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CitySearch","import { mockData } from './mock-data';\r\nimport NProgress from 'nprogress';\r\nimport axios from 'axios';\r\n\r\nconst removeQuery = () => {\r\n    if (window.history.pushState && window.location.pathname) {\r\n        var newurl =\r\n            window.location.protocol + \r\n            \"//\" +\r\n            window.location.host +\r\n            window.location.pathname;\r\n        window.history.pushState(\"\", \"\", newurl);\r\n    } else {\r\n        newurl = window.location.protocol + \"//\" + window.location.host;\r\n        window.history.pushState(\"\", \"\", newurl);\r\n    }\r\n};\r\n\r\nconst checkToken = async (accessToken) => {\r\n    const result = await fetch(`https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`)\r\n        .then((res) => res.json())\r\n        .catch((error) => error.json());\r\n\r\n    return result\r\n}\r\n\r\nconst extractLocations = (events) => {\r\n    var extractLocations = events.map((event) => event.location);\r\n    var locations = [...new Set(extractLocations)];\r\n    \r\n    return locations;\r\n};\r\n\r\nconst getEvents = async () => {\r\n    NProgress.start();\r\n  \r\n    if (window.location.href.startsWith('http://localhost')) {\r\n      NProgress.done();\r\n      return mockData;\r\n    }\r\n\r\n    const token = await getAccessToken();\r\n  \r\n        if (token) {\r\n          removeQuery();\r\n          const url = 'https://k3o9f64iji.execute-api.us-west-2.amazonaws.com/dev/api/get-events' + '/' + token;\r\n          const result = await axios.get(url);\r\n      \r\n          if (result.data) {\r\n            var locations = extractLocations(result.data.events);\r\n            localStorage.setItem('lastEvents', JSON.stringify(result.data));\r\n            localStorage.setItem('locations', JSON.stringify(locations));\r\n          }\r\n          NProgress.done();\r\n          return result.data.events;\r\n        }\r\n      };\r\n\r\nconst getAccessToken = async () => {\r\n    const accessToken = localStorage.getItem('access_token');\r\n    const tokenCheck = accessToken && (await checkToken(accessToken));\r\n\r\n    if (!accessToken || tokenCheck.error) {\r\n        await localStorage.removeItem('access_token');\r\n        const searchParams = new URLSearchParams(window.location.search);\r\n        const code = await searchParams.get('code');\r\n        \r\n        if (!code) {\r\n            const results = await axios.get(\"https://k3o9f64iji.execute-api.us-west-2.amazonaws.com/dev/api/get-auth-url\");\r\n            \r\n            const { authUrl } = results.data;\r\n            return (window.location.href = authUrl);\r\n        }\r\n        return code && getToken(code);\r\n    }\r\n    return accessToken;\r\n}\r\n\r\nconst getToken = async (code) => {\r\n    const encodeCode = encodeURIComponent(code);\r\n    const { access_token } = await fetch(\r\n        'https://k3o9f64iji.execute-api.us-west-2.amazonaws.com/dev/api/token' + '/' + encodeCode\r\n    )\r\n        .then((res) => {\r\n            return res.json();\r\n        })\r\n        .catch((error) => error);\r\n\r\n    access_token && localStorage.setItem('access_token', access_token);\r\n\r\n    return access_token;\r\n};\r\n\r\nexport { getEvents, getAccessToken, extractLocations, getToken, checkToken };","import React, { Component } from 'react';\r\nimport { mockData } from './mock-data';\r\nimport { getEvents } from './api';\r\n\r\nclass NumberOfEvents extends Component {\r\n    \r\n    state= {\r\n        eventNumber: 15,\r\n    };\r\n\r\n    handleInputChanged = (event) => {\r\n        const value = event.target.value;\r\n    \r\n        this.setState({\r\n            eventNumber: value\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <label \r\n                    // for='number-events' \r\n                    className='number-label'>\r\n                    Number of Events:\r\n                </label>\r\n                <input \r\n                    type='text' \r\n                    id='number-events' \r\n                    className='number-events' \r\n                    value={this.state.eventNumber}\r\n                    onChange={this.handleInputChanged} \r\n                    placeholder={this.state.eventNumber}\r\n                />\r\n                {/* not sure why I wanted this */}\r\n                {/* <div>{mockData}</div>   */}\r\n            </div>\r\n            \r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default NumberOfEvents","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport EventList from './EventList';\r\nimport CitySearch from './CitySearch';\r\nimport NumberOfEvents from './NumberOfEvents';\r\nimport { extractLocations, getEvents } from './api';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    events: [],\r\n    locations: [],\r\n    numberOfEvents: 15\r\n  }\r\n\r\n// checked \r\n  updateEvents = (location) => {\r\n    getEvents().then((events) => {\r\n      const locationEvents = (location === 'all')\r\n      ?\r\n        events\r\n      :\r\n        events.filter((event) => event.location === location);\r\n      this.setState({\r\n        events: locationEvents\r\n      });\r\n    });\r\n  }\r\n\r\n// checked\r\n  componentDidMount() {\r\n    this.mounted = true;\r\n    getEvents().then((events) => {\r\n      this.setState({ events, locations: extractLocations(events) });\r\n    });\r\n  }\r\n\r\n  // checked\r\n  componenetWillUnmount(){\r\n    this.mounted = false;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      \r\n      <div className=\"App\">\r\n        <CitySearch  locations={this.state.locations} updateEvents={this.updateEvents} />\r\n        <EventList events={this.state.events} />\r\n        <NumberOfEvents />\r\n      </div>\r\n    );  \r\n  }\r\n  \r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.unregister();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}